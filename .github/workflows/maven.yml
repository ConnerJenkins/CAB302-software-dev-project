name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21 (Corretto)
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "corretto"
          cache: maven


      - name: Build
        run: ./mvnw -B -e -DskipTests=false package

      - name: Generate Javadoc
        run: ./mvnw -B -e javadoc:javadoc



      # one-time: create gh-pages if missing
      - name: Create gh-pages branch if missing
        if: github.event_name == 'push' && github.ref == 'refs/heads/integration'
        run: |
          set -e
          if ! git ls-remote --exit-code --heads origin gh-pages &>/dev/null; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            # Remember where we were so we can return after bootstrapping
            START_REF=$(git rev-parse --abbrev-ref HEAD)

            git checkout --orphan gh-pages
            # Clean index and working tree without trying to delete '.'
            git reset --hard
            git clean -fdx

            # Put a placeholder so the first push creates the branch
            echo "<!doctype html><title>Docs</title><h1>Initializing gh-pages…</h1>" > index.html
            git add index.html
            git commit -m "Initialize gh-pages"
            git push origin gh-pages

            # Go back to the build branch
            git checkout "$START_REF"
          fi


      - name: Publish Javadoc
        if: github.event_name == 'push' && github.ref == 'refs/heads/integration'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target/docs/javadoc   # change to target/site/apidocs if that’s where yours land
          clean: true
